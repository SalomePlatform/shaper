# -*- coding: utf-8 -*-
#
# SHAPER documentation build configuration file, created by
# sphinx-quickstart on Fri Aug  3 11:29:53 2018.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#

import importlib
import os
import sys
import sphinx
# sys.path.insert(0, os.path.abspath('.'))


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc','sphinx.ext.autosummary']
# Optional extensions
extra_extensions = ['sphinx_rtd_theme']
if sphinx.version_info[:2] < (1,3):
    extra_extensions += ['sphinxcontrib.napoleon']
else:
    extra_extensions += ['sphinx.ext.napoleon']
for ext in extra_extensions:
    try:
        importlib.import_module(ext)
        extensions.append(ext)
        globals().update({'use_{}'.format(ext):True})
    except:
        globals().update({'use_{}'.format(ext):False})

# Add any paths that contain templates here, relative to this directory.
#templates_path = [os.path.join('@CMAKE_CURRENT_SOURCE_DIR@','templates')]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'SHAPER'
copyright = u'2014-2024  CEA, EDF'

# Copyright is shown via custom footer
html_show_copyright = False

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u'@SHAPER_VERSION@'
# The full version, including alpha/beta/rc tags.
release = u'@SHAPER_VERSION@'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
#language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
# todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
if use_sphinx_rtd_theme:
  html_theme = 'sphinx_rtd_theme'
else:
  html_theme = 'default' if sphinx.version_info[:2] < (1,3) else 'classic'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
themes_options = {}
themes_options['classic'] = {
  'body_max_width':'none',
  'body_min_width':0,
}
themes_options['sphinx_rtd_theme'] = {
  'prev_next_buttons_location':'both',
}

html_theme_options = themes_options.get(html_theme, {})

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = [os.path.join('@CMAKE_CURRENT_BINARY_DIR@','static')]


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'SHAPERdoc'


# -- Options for LaTeX output ---------------------------------------------

# The paper size ('letter' or 'a4').
latex_paper_size = 'a4'

# The font size ('10pt', '11pt' or '12pt').
latex_font_size = '10pt'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, document class [howto/manual]).
latex_documents = [
  ('index', 'SHAPER.tex', 'SHAPER User Documentation', '', 'manual'),
]

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'SHAPER.tex', u'SHAPER Documentation',
     u'vsv', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
#man_pages = [
#    (master_doc, 'shaper', u'SHAPER Documentation',
#     [author], 1)
#]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
#texinfo_documents = [
#    (master_doc, 'SHAPER', u'SHAPER Documentation',
#     author, 'SHAPER', 'One line description of project.',
#     'Miscellaneous'),
#]
